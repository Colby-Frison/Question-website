rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }
    
    // User profiles - users can only read/write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Questions collection
    match /questions/{questionId} {
      // Anyone can read questions for a class they know the code for
      allow read: if true;
      
      // Anyone can create questions with valid data
      allow create: if request.resource.data.text != null && 
                     request.resource.data.classCode != null;
      
      // Students can update their own questions
      allow update: if request.resource.data.userIdentifier == resource.data.userIdentifier ||
                     // Allow professors to update status
                     (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status', 'lastUpdated']));
      
      // Students can delete their own questions or professors can delete questions for their class
      allow delete: if true;
    }
    
    // User questions collection - links questions to users
    match /userQuestions/{userQuestionId} {
      // Anyone can read/write user questions
      allow read, write: if true;
    }
    
    // Class codes collection
    match /classCodes/{classCode} {
      // Anyone can read class codes (needed for students to join)
      allow read: if true;
      
      // Anyone can create class codes with valid data
      allow create: if request.resource.data.professorId != null &&
                     request.resource.data.code != null;
      
      // Anyone can update/delete class codes
      allow update, delete: if true;
    }
    
    // Joined classes collection
    match /joinedClasses/{joinId} {
      // Anyone can read/write joined classes
      allow read, write: if true;
    }
    
    // Class sessions collection
    match /classSessions/{sessionId} {
      // Anyone can read/write class sessions
      allow read, write: if true;
    }
    
    // Active questions collection - for the professor's current question
    match /activeQuestions/{questionId} {
      // Anyone can read active questions
      allow read: if true;
      
      // Only professors can create/update/delete active questions
      allow create: if request.resource.data.professorId != null && 
                     request.resource.data.classCode != null &&
                     request.resource.data.text != null;
      
      allow update, delete: if true;
    }
    
    // Answers collection - for student answers to active questions
    match /answers/{answerId} {
      // Anyone can read answers
      allow read: if true;
      
      // Students can create answers with valid data
      allow create: if request.resource.data.activeQuestionId != null && 
                     request.resource.data.studentId != null &&
                     request.resource.data.classCode != null &&
                     request.resource.data.text != null;
      
      // Allow all operations for maintenance
      allow update, delete: if true;
    }
    
    // Student points collection - for tracking student points
    match /studentPoints/{studentId} {
      // Students can read their own points
      allow read: if true;
      
      // Anyone can update points (professors need to award points)
      allow write: if true;
    }
    
    // IMPORTANT: Allow all operations for maintenance and batch operations
    match /{path=**} {
      allow read, write: if true;
    }
  }
} 